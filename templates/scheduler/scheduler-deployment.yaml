---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scheduler.fullname" . }}
  labels:
    {{- include "scheduler.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "scheduler.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.airflow.scheduler.replicas }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scheduler.selectorLabels" . | nindent 8 }}
    spec:
      priorityClassName: ""
      affinity:
        podAffinity: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "scheduler.selectorLabels" . | nindent 20 }}
                namespaces:
                  - {{ .Release.Namespace }}
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity: {}
      initContainers:
        {{- if .Values.airflow.scheduler.waitForMigrations.enabled }}
        - name: wait-for-airflow-migrations
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy:  {{ .Values.airflow.image.pullPolicy }}
          args: {{- include "wait-for-migrations-command" . | indent 10 }}
          env:
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-common
                key: airflow-fernet-key
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: {{ include "postgresql.fullname" . }}
                key: connection
          resources: {{- toYaml .Values.airflow.scheduler.resources | nindent 12 }}
        {{- end }}
      containers:
        - name: airflow-scheduler
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy:  {{ .Values.airflow.image.pullPolicy }}
          {{- if .Values.airflow.scheduler.command }}
          command: {{- tpl (toYaml .Values.airflow.scheduler.command) . | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.scheduler.args }}
          args: {{- tpl (toYaml .Values.airflow.scheduler.args) . | nindent 12 }}
          {{- end }}
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-common
                  key: airflow-fernet-key
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-common
                  key: webserver-secret-key
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "False"
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.fullname" . }}
                  key: connection
            - name: AIRFLOW__CORE__EXECUTOR
              value: {{ .Values.airflow.executor }}
            {{- if or (eq .Values.airflow.executor "KubernetesExecutor") (eq .Values.airflow.executor "CeleryKubernetesExecutor") }}
            - name: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
              value: {{ .Release.Namespace }}
            - name: AIRFLOW__KUBERNETES_EXECUTOR__POD_TEMPLATE_FILE
              value: {{ .Values.airflow.homeDir }}/pod_templates/pod_template_file.yaml
            {{ end }}
            - name: AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL
              value: "{{ .Values.airflow.scheduler.dags.listInterval }}"
            {{- if .Values.dags.gitSync.enabled }}
            - name: AIRFLOW__CORE__DAGS_FOLDER
              value: {{ template "airflow_dags" . }}
            {{- end }}
            - name: AIRFLOW__CORE__DAG_IGNORE_FILE_SYNTAX
              value: {{ .Values.airflow.scheduler.dagIgnoreFileSyntax }}
           {{- if or (eq .Values.airflow.executor "CeleryExecutor") (eq .Values.airflow.executor "CeleryKubernetesExecutor") }}
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis.fullname" . }}
                  key: connection
          {{- end }}
          {{- if .Values.airflow.scheduler.livenessProbe.enabled }}
          livenessProbe:
            failureThreshold: {{ .Values.airflow.scheduler.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.airflow.scheduler.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.airflow.scheduler.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.airflow.scheduler.livenessProbe.timeoutSeconds }}
            exec:
              command:
              {{- include "scheduler_liveness_check_command" . | indent 14 }}
          {{ end }}
          volumeMounts:
            {{- if .Values.airflow.logs.persistence.enabled }}
            - name: logs
              mountPath: {{ template "airflow_logs" . }}
            {{- end }}
            - name: dags-data
              mountPath: {{ .Values.airflow.homeDir }}/dags
            {{- if or (eq .Values.airflow.executor "KubernetesExecutor") (eq .Values.airflow.executor "CeleryKubernetesExecutor") }}
            - name: pod-template
              mountPath: {{ include "airflow_pod_template_file" . }}/pod_template_file.yaml
              subPath: pod_template_file.yaml
              readOnly: true
            {{ end }}
          resources:
            {{- toYaml .Values.airflow.scheduler.resources | nindent 12 }}
        {{- if .Values.airflow.scheduler.logGroomerSidecar.enabled }}
        - name: scheduler-log-groomer
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy:  {{ .Values.airflow.image.pullPolicy }}
          {{- if .Values.airflow.scheduler.logGroomerSidecar.command }}
          command: {{ tpl (toYaml .Values.airflow.scheduler.logGroomerSidecar.command) . | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.scheduler.logGroomerSidecar.args }}
          args: {{- tpl (toYaml .Values.airflow.scheduler.logGroomerSidecar.args) . | nindent 12 }}
          {{- end }}
          {{- if .Values.airflow.scheduler.logGroomerSidecar.retentionDays }}
          env:
            - name: AIRFLOW__LOG_RETENTION_DAYS
              value: "{{ .Values.airflow.scheduler.logGroomerSidecar.retentionDays }}"
          {{- end }}
          resources: {{- toYaml .Values.airflow.scheduler.logGroomerSidecar.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: {{ template "airflow_logs" . }}
        {{- end }}
        {{- if .Values.dags.gitSync.enabled }}
          {{- include "git_sync_container" . | indent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.airflow.logs.persistence.enabled }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ template "airflow_logs_volume_claim" . }}
        {{- end }}
        - name: dags-data
          emptyDir: {}
        {{- if or (eq .Values.airflow.executor "KubernetesExecutor") (eq .Values.airflow.executor "CeleryKubernetesExecutor") }}
        - name: pod-template
          configMap:
            name: {{ .Release.Name }}-pod-template-config
            defaultMode: 420
        {{ end }}
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
